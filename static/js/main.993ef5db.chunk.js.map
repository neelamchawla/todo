{"version":3,"sources":["component/Todo.js","App.js","index.js"],"names":["Todo","addTodo","e","state","todo","list","id","dataToAdd","done","Date","now","name","charAt","toUpperCase","slice","push","setState","doneTodo","target","value","checked","findIndex","items","console","log","selectAllChkBox","map","res","deSelectAllChkBox","forEach","handleDelete","window","confirm","newlist","filter","item","DeleteAllItems","Deletelist","renderList","d","key","onChange","bind","renderActiveList","activeList","activeData","renderCompletedList","completedList","completedData","hideComponent","showActive","showAll","showComplete","handleChange","this","className","htmlFor","type","onClick","disabled","length","icon","style","float","color","far","React","Component","MyList","props","AlertClass","defaultValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.993ef5db.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport './Todo.css';\r\n\r\nclass Todo extends React.Component {\r\nconstructor(){\r\n  super();\r\n    this.state = {\r\n      todo: \"\",\r\n      id: Date.now(),\r\n      done: false,\r\n      list: [],\r\n      showAll: true,\r\n      showActive: false,\r\n      showComplete: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    //example if we dnt bind here then, we hv to bind like this addTodo = (e) => {\r\n  }\r\n\r\n  handleChange (e) {\r\n    this.setState({\r\n      todo: e.target.value,\r\n      done: e.target.done\r\n    })\r\n  }\r\n\r\n  addTodo = (e) => {\r\n    const {todo, list, id} = this.state\r\n    \r\n    const dataToAdd = {\r\n      done: false,\r\n      id: Date.now(),\r\n      name: todo.charAt(0).toUpperCase() + todo.slice(1)\r\n    }\r\n\r\n    list.push(dataToAdd)\r\n      this.setState({ \r\n        list,\r\n        id,\r\n        todo: ''\r\n       });\r\n    // console.log(\"type ->\",typeof(list))\r\n    // console.log('list', list)\r\n  }\r\n\r\n  doneTodo = (e) => {\r\n    const {value, checked} = e.target\r\n    const {list} = this.state\r\n    const id = list.findIndex(items => items.name === value)\r\n    console.log(\"doneTodo\",id, value, checked)\r\n    // if (id === -1) return\r\n\r\n    list[id].done = checked\r\n    \r\n    this.setState({list})\r\n    console.log([checked === 'done'], 'total');\r\n  }\r\n\r\n  selectAllChkBox = (e) => {\r\n    let list = this.state.list\r\n    // console.log(\"lst\",list);\r\n    list.map(res => (res.done = true))\r\n    this.setState({list: list})\r\n    console.log('selectAll list', list)\r\n  }\r\n\r\n  deSelectAllChkBox = (e) => {\r\n    let list = this.state.list\r\n    // console.log(\"lst\",list);\r\n    list.forEach(res => (res.done = false))\r\n    this.setState({list: list})\r\n    console.log('de-selectAll list', list)\r\n  }\r\n  \r\n  handleDelete = (id) => {\r\n    if (window.confirm(\"Are You Sure, You Want To Delete This Item???\" )){\r\n    const newlist = this.state.list.filter((e, item) => {\r\n      return item !== id\r\n    })\r\n    console.log('res list', id)\r\n    this.setState({list: newlist})  \r\n    } else { return false }\r\n  }\r\n\r\n  DeleteAllItems = (id) => {\r\n    if (window.confirm(\"Are You Sure, You Want To Delete All These Items???\" )){\r\n    const Deletelist = this.state.list.filter((done) => {\r\n      return done === 'false'\r\n    })\r\n    console.log('Delete list ', id)\r\n    this.setState({list: Deletelist})}\r\n    else { return false }\r\n  }\r\n\r\n// ======================================================\r\n\r\nrenderList = () => {\r\n  const {list} = this.state;\r\n  const data = list.map((d,id) => {\r\n    return(\r\n      <MyList key={id} done={d.done} name={d.name} onChange={this.doneTodo}\r\n      handleDelete={this.handleDelete.bind(this,id)} \r\n      />\r\n    )\r\n  })\r\n  // console.log(list);\r\n  return data;\r\n}\r\n\r\n// ======================================================\r\n\r\nrenderActiveList = () => {\r\n  // alert('test');\r\n  const activeList = this.state.list.filter(res => (res.done === false));\r\n  const activeData = activeList.map((d,id) => {\r\n    return(\r\n      <MyList key={id} done={d.done} name={d.name} onChange={this.doneTodo}\r\n      handleDelete={this.handleDelete.bind(this,id)} \r\n      />\r\n    )\r\n  })\r\n  console.log(activeList);\r\n  return activeData;\r\n}\r\n\r\n// ======================================================\r\n\r\nrenderCompletedList = () => {\r\n  // alert('test');\r\n  const completedList = this.state.list.filter(res => (res.done === true));\r\n  const completedData = completedList.map((d,id) => {\r\n    return(\r\n      <MyList key={id} done={d.done} name={d.name} onChange={this.doneTodo}\r\n      handleDelete={this.handleDelete.bind(this,id)} \r\n      />\r\n    )\r\n  })\r\n  console.log(completedList);\r\n  return completedData;\r\n}\r\n\r\n// ======================================================\r\n\r\nhideComponent = (name) => {\r\n  switch (name) {\r\n    case \"showActive\":\r\n      this.setState({ showActive: true, showAll: false, showComplete: false });\r\n      break;\r\n    case \"showComplete\":\r\n      this.setState({ showComplete: true, showAll: false, showActive: false });\r\n      break;\r\n    case \"showAll\": \r\n      this.setState({ showAll: true, showActive: false, showComplete: false });\r\n      break;\r\n    default:\r\n      this.setState({ showAll: true, showActive: false, showComplete: false });\r\n  }\r\n}\r\n\r\n// ======================================================\r\n\r\n  render() {\r\n    // console.log(\"render\",this.state.list);\r\n    const { showAll, showActive, showComplete } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n            <h1 htmlFor=\"todo\"><b>TODO LIST</b></h1>\r\n            <input type=\"text\" className=\"form-control\" id=\"todo\" value={this.state.todo} onChange={this.handleChange} />\r\n            <button className=\"btn btn-warning\" onClick={this.addTodo} disabled={!this.state.todo}>{\"Add \" + (this.state.list.length + 1)}</button>\r\n        </div>\r\n\r\n  <span className=\"check\">\r\n  <MDBIcon icon=\"check\" onClick={this.selectAllChkBox}> Select All\r\n  </MDBIcon>\r\n  </span>    \r\n  <span className=\"check\" style={{float: 'right'}}>\r\n  <MDBIcon icon=\"ban\" onClick={this.deSelectAllChkBox}> De - Select All\r\n  </MDBIcon>\r\n  </span>\r\n  <br/>\r\n  <hr/>\r\n            {/* <MyList name={\"something\"} onChange={this.doneTodo}/> */}\r\n\r\n            <div className=\"box\">\r\n            { showAll && this.renderList()}\r\n            { showActive && this.renderActiveList() }\r\n            { showComplete && this.renderCompletedList() }\r\n            </div>\r\n            <br/>\r\n          \r\n            <span style={{color: 'aliceblue'}}>\r\n                {(this.state.list\r\n                  .filter(res => (res.done === false))\r\n                  .length) + \" items left\"}\r\n                \r\n                <button className=\"btn3 btn-danger\" onClick={this.DeleteAllItems}>\r\n                <MDBIcon far icon=\"trash-alt\" /> Delete All\r\n                </button>\r\n            </span>\r\n        <center>\r\n          <br/>\r\n\r\n            <button className=\"btn btn-success\"\r\n            onClick={() => this.hideComponent('showAll')}\r\n            >\r\n              <MDBIcon icon=\"check\" /> All\r\n            </button>\r\n            <button className=\"btn btn-info\"\r\n            onClick={() => this.hideComponent(\"showActive\")}\r\n            >\r\n              <MDBIcon icon=\"check\" /> Active\r\n            </button>\r\n            <button className=\"btn btn-info\"\r\n            onClick={() => this.hideComponent(\"showComplete\")} >\r\n              <MDBIcon icon=\"ban\" /> Completed\r\n            </button>\r\n        </center>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MyList = (props) => {\r\n  let name\r\n  let AlertClass\r\n  if(props.done){\r\n    name = <strike>{props.name}</strike>\r\n    AlertClass = \"alert alert-danger\"\r\n  }\r\n  else{\r\n    name = props.name\r\n    AlertClass = \"alert alert-info\"\r\n  }\r\n  return(\r\n    <Fragment>\r\n      <div className={AlertClass}>\r\n        <div className=\"checkbox\">\r\n          <label><input type=\"checkbox\" defaultValue={props.name} onChange={props.onChange} checked={props.done}/>\r\n          &nbsp;\r\n          {name}\r\n          </label>\r\n          <button type=\"button\" className=\"btn2 btn-danger\" \r\n          onClick={() => props.handleDelete()}\r\n          >\r\n            <MDBIcon far icon=\"trash-alt\" />\r\n            {/* <span class=\"glyphicon glyphicon-trash\"></span>\r\n            // enable the bootstrap css in index.html */}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Todo from './component/Todo';\n// import Box from './component/Box';\n// import Todo2 from './component/todo2/Todo2';\nimport './component/todo2/Todo2.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n      {/* <Box /> */}\n      {/* <Todo2 /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}