{"version":3,"sources":["component/Todo.js","App.js","index.js"],"names":["Todo","addTodo","e","state","todo","list","id","dataToAdd","done","Date","now","name","charAt","toUpperCase","slice","push","setState","doneTodo","target","value","checked","findIndex","items","console","log","renderList","map","d","key","onChange","handleDelete","bind","activeList","filter","res","completedList","selectAllChkBox","deSelectAllChkBox","forEach","window","confirm","newlist","item","DeleteAllItems","Deletelist","handleChange","this","className","htmlFor","type","onClick","disabled","length","icon","style","cursor","float","color","far","React","Component","MyList","props","AlertClass","defaultValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dba426d4.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n// import React, { Component } from 'react';\r\nimport { MDBIcon } from \"mdbreact\";\r\n// import { MDBRow, MDBCol } from \"mdbreact\";\r\nimport './Todo.css';\r\n\r\nclass Todo extends React.Component {\r\nconstructor(){\r\n  super();\r\n    this.state = {\r\n      todo: \"\",\r\n      id: Date.now(),\r\n      done: false,\r\n      list: []\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    //example if we dnt bind here then, we hv to bind like this addTodo = (e) => {\r\n  }\r\n\r\n  handleChange (e) {\r\n    this.setState({\r\n      todo: e.target.value,\r\n      done: e.target.done\r\n    })\r\n  }\r\n\r\n  addTodo = (e) => {\r\n    const {todo, list, id} = this.state\r\n    \r\n    const dataToAdd = {\r\n      done: false,\r\n      id: Date.now(),\r\n      name: todo.charAt(0).toUpperCase() + todo.slice(1)\r\n    }\r\n\r\n    list.push(dataToAdd)\r\n      this.setState({ \r\n        list,\r\n        id,\r\n        todo: ''\r\n       });\r\n    // console.log(\"type ->\",typeof(list))\r\n    // console.log('list', list)\r\n  }\r\n\r\n  doneTodo = (e) => {\r\n    const {value, checked} = e.target\r\n    const {list} = this.state\r\n    const id = list.findIndex(items => items.name === value)\r\n    console.log(\"doneTodo\",id, value, checked)\r\n    // if (id === -1) return\r\n\r\n    list[id].done = checked\r\n    \r\n    this.setState({list})\r\n    console.log([checked === 'done'], 'total');\r\n  }\r\n\r\n  renderList = () => {\r\n    const {list} = this.state\r\n    const data = list.map((d,id) => {\r\n      return(\r\n        <MyList key={id} done={d.done} name={d.name} onChange={this.doneTodo}\r\n        handleDelete={this.handleDelete.bind(this,id)} \r\n        />\r\n      )\r\n    })\r\n    return data;\r\n  }\r\n\r\n  activeList = (e) => {\r\n    const activeList = this.state.list\r\n      .filter(res => (res.done === false))\r\n    console.log(activeList);\r\n  }\r\n\r\n  completedList = (e) => {\r\n    const completedList = this.state.list\r\n      .filter(res => (res.done === true));\r\n    console.log(completedList);\r\n  }\r\n\r\n  selectAllChkBox = (e) => {\r\n    let list = this.state.list\r\n    // console.log(\"lst\",list);\r\n    list.map(res => (res.done = true))\r\n    this.setState({list: list})\r\n    console.log('selectAll list', list)\r\n  }\r\n\r\n  deSelectAllChkBox = (e) => {\r\n    let list = this.state.list\r\n    // console.log(\"lst\",list);\r\n    list.forEach(res => (res.done = false))\r\n    this.setState({list: list})\r\n    console.log('de-selectAll list', list)\r\n  }\r\n  \r\n  handleDelete = (id) => {\r\n    if (window.confirm(\"Are You Sure, You Want To Delete This Item???\" )){\r\n    const newlist = this.state.list.filter((e, item) => {\r\n      return item !== id\r\n    })\r\n    console.log('res list', id)\r\n    this.setState({list: newlist})  \r\n    } else { return false }\r\n  }\r\n\r\n  DeleteAllItems = (id) => {\r\n    if (window.confirm(\"Are You Sure, You Want To Delete All These Items???\" )){\r\n    const Deletelist = this.state.list.filter((done) => {\r\n      return done === 'false'\r\n    })\r\n    console.log('Delete list ', id)\r\n    this.setState({list: Deletelist})}\r\n    else { return false }\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"render\",this.state.list);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n            <h1 htmlFor=\"todo\"><b>TODO LIST</b></h1>\r\n            <input type=\"text\" className=\"form-control\" id=\"todo\" value={this.state.todo} onChange={this.handleChange} />\r\n            <button className=\"btn btn-warning\" onClick={this.addTodo} disabled={!this.state.todo}>{\"Add \" + (this.state.list.length + 1)}</button>\r\n        </div>\r\n        \r\n  <MDBIcon icon=\"check\" style={{cursor: 'pointer'}} onClick={this.selectAllChkBox}> Select All\r\n  </MDBIcon>\r\n  <span style={{float: 'right', cursor: 'pointer'}}>\r\n  <MDBIcon icon=\"ban\" onClick={this.deSelectAllChkBox}> De - Select All\r\n  </MDBIcon>\r\n  </span>\r\n  <br/>\r\n  <hr/>\r\n            {/* <MyList name={\"something\"} onChange={this.doneTodo}/> */}\r\n\r\n            {this.renderList()}\r\n          \r\n            <span style={{color: 'aliceblue'}}>\r\n                {(this.state.list\r\n                  .filter(res => (res.done === false))\r\n                  .length) + \" items left\"}\r\n                \r\n                <button className=\"btn3 btn-danger\" onClick={this.DeleteAllItems}>\r\n                <MDBIcon far icon=\"trash-alt\" /> Delete All\r\n                </button>\r\n            </span>\r\n        <center>\r\n          <br/>\r\n            <button className=\"btn btn-success\" onClick={this.activeList} >\r\n              <MDBIcon icon=\"check\" /> Active\r\n            </button>\r\n            <button className=\"btn btn-info\" onClick={this.completedList} >\r\n              <MDBIcon icon=\"ban\" /> Completed\r\n            </button>\r\n            {/* <button className=\"btn btn-info\" onClick={this.selectAllChkBox} >\r\n              <MDBIcon icon=\"check\" /> Select All\r\n            </button> */}\r\n            {/* <button className=\"btn btn-info\" onClick={this.deSelectAllChkBox} >\r\n                <MDBIcon icon=\"ban\" /> De - Select All\r\n            </button> */}\r\n        </center>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MyList = (props) => {\r\n  let name\r\n  let AlertClass\r\n  if(props.done){\r\n    name = <strike>{props.name}</strike>\r\n    AlertClass = \"alert alert-danger\"\r\n  }\r\n  else{\r\n    name = props.name\r\n    AlertClass = \"alert alert-info\"\r\n  }\r\n  return(\r\n    <Fragment>\r\n      <div className={AlertClass}>\r\n        <div className=\"checkbox\">\r\n          <label><input type=\"checkbox\" defaultValue={props.name} onChange={props.onChange} checked={props.done}/>\r\n          &nbsp;\r\n          {name}\r\n          </label>\r\n          <button type=\"button\" className=\"btn2 btn-danger\" \r\n          onClick={() => props.handleDelete()}\r\n          >\r\n            <MDBIcon far icon=\"trash-alt\" />\r\n            {/* <span class=\"glyphicon glyphicon-trash\"></span>\r\n            // enable the bootstrap css in index.html */}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Todo from './component/Todo';\n// import Box from './component/Box';\n// import Todo2 from './component/todo2/Todo2';\nimport './component/todo2/Todo2.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n      {/* <Box /> */}\n      {/* <Todo2 /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}