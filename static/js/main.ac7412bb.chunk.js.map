{"version":3,"sources":["component/Todo.js","component/Box.js","component/todo2/ListItems.js","component/todo2/Todo2.js","App.js","index.js"],"names":["MyList","React","Component","props","name","AlertClass","done","className","type","defaultValue","onChange","checked","onClick","handleDelete","far","icon","ListItems","listItems","items","map","item","key","id","value","text","e","setUpdate","target","deleteItem","duration","easing","library","add","faTrash","Todo2","state","currentItem","addItem","bind","handleInput","preventDefault","newItem","this","setState","Date","now","filteredItems","filter","console","log","onSubmit","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac7412bb.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n// import React, { Component } from 'react';\r\nimport { MDBIcon } from \"mdbreact\";\r\n// import { MDBRow, MDBCol } from \"mdbreact\";\r\nimport './Todo.css';\r\n\r\nclass Todo extends React.Component {\r\nconstructor(){\r\n  super();\r\n    this.state = {\r\n      todo: \"\",\r\n      id: Date.now(),\r\n      list: []\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.addTodo = this.addTodo.bind(this);\r\n    this.doneTodo = this.doneTodo.bind(this);\r\n    this.selectAllChkBox = this.selectAllChkBox.bind(this);\r\n    this.deSelectAllChkBox = this.deSelectAllChkBox.bind(this);\r\n    // this.handleDelete = this.handleDelete.bind(this);\r\n    //example if we dnt bind here then, we hv to bind in props property\r\n  }\r\n\r\n  handleChange(e){\r\n    this.setState({\r\n      todo: e.target.value\r\n    })\r\n  }\r\n\r\n  addTodo(e){\r\n    const {todo, list, id} = this.state\r\n    \r\n    const dataToAdd = {\r\n      done: false,\r\n      id: Date.now(),\r\n      name: todo\r\n    }\r\n\r\n    list.push(dataToAdd)\r\n      this.setState({ \r\n        list,\r\n        id,\r\n        todo: ''\r\n       });\r\n    // console.log(\"type ->\",typeof(list))\r\n    // console.log('list', list)\r\n  }\r\n\r\n  doneTodo(e){\r\n    const {value, checked} = e.target\r\n    const {list} = this.state\r\n    const id = list.findIndex(items => items.name === value)\r\n    console.log(\"doneTodo\",id, value, checked)\r\n    // if (id === -1) return\r\n\r\n    list[id].done = checked\r\n    \r\n    this.setState({list})\r\n    console.log([checked === 'done'], 'total');\r\n  }\r\n\r\n  renderList(){\r\n    const {list} = this.state\r\n    const data = list.map((d,id) => {\r\n      return(\r\n        <MyList key={id} done={d.done} name={d.name} onChange={this.doneTodo} \r\n        handleDelete={this.handleDelete.bind(this,id)} \r\n        />\r\n      )\r\n    })\r\n    return data;\r\n  }\r\n\r\n  selectAllChkBox = (e) => {\r\n    let list = this.state.list\r\n    // console.log(\"lst\",list);\r\n    list.map(res => (res.done = true))\r\n    this.setState({list: list})\r\n    console.log('selectAll list', list)\r\n    return list;\r\n  }\r\n\r\n  deSelectAllChkBox = (e) => {\r\n    let list = this.state.list\r\n    // console.log(\"lst\",list);\r\n    list.forEach(res => (res.done = false))\r\n    this.setState({list: list})\r\n    console.log('de-selectAll list', list)\r\n    return list;\r\n  }\r\n  \r\n  handleDelete = (id) => {\r\n    if (window.confirm(\"Are You Sure, You Want To Delete This Item???\" )){\r\n    const newlist = this.state.list.filter((e, item) => {\r\n      return item !== id\r\n    })\r\n    console.log('res list', id)\r\n    this.setState({list: newlist})  }\r\n    else { return false }\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"render\",this.state.list);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"jumbotron\">\r\n            <label htmlFor=\"todo\"><b>TODO LIST</b></label>\r\n            <input type=\"text\" className=\"form-control\" id=\"todo\" value={this.state.todo} onChange={this.handleChange} />\r\n            <button className=\"btn btn-warning\" onClick={this.addTodo} disabled={!this.state.todo}>{\"Add \" + (this.state.list.length + 1)}</button>\r\n          </div>\r\n          \r\n            {/* <MyList name={\"something\"} onChange={this.doneTodo}/> */}\r\n            {this.renderList()}\r\n          \r\n            <span>\r\n                {(this.state.list.length) + \" items left\"}\r\n            </span>\r\n        <center>\r\n            <button className=\"btn btn-success\" onClick={this.selectAllChkBox} >\r\n              <MDBIcon icon=\"check\" /> Select All\r\n            </button>\r\n            <button className=\"btn btn-info\" onClick={this.deSelectAllChkBox} >\r\n                <MDBIcon icon=\"ban\" /> De - Select All\r\n            </button>\r\n        </center>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MyList = (props) => {\r\n  let name\r\n  let AlertClass\r\n  if(props.done){\r\n    name = <strike>{props.name}</strike>\r\n    AlertClass = \"alert alert-danger\"\r\n  }\r\n  else{\r\n    name = props.name\r\n    AlertClass = \"alert alert-info\"\r\n  }\r\n  return(\r\n    <Fragment>\r\n      <div className={AlertClass}>\r\n        <div className=\"checkbox\">\r\n          <label><input type=\"checkbox\" defaultValue={props.name} onChange={props.onChange} checked={props.done}/>{name}</label>\r\n          <button type=\"button\" className=\"btn2 btn-danger\" \r\n          onClick={() => props.handleDelete()}\r\n          >\r\n            <MDBIcon far icon=\"trash-alt\" />\r\n            {/* <span class=\"glyphicon glyphicon-trash\"></span>\r\n            // enable the bootstrap css in index.html */}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass Box extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            allChecked: false,\r\n            list: [\r\n                {id:1, name: \"item1\", isChecked: false},\r\n                {id:2, name: \"item2\", isChecked: false},\r\n                {id:3, name: \"item3\", isChecked: false},\r\n            ],\r\n        };\r\n    }\r\n\r\nhandleChange = (e) => {\r\n    let list =  this.state.list;\r\n    let allChecked = this.state.allChecked;\r\n    if(e.target.value === \"checkAll\"){\r\n        list.forEach(item => {\r\n            item.isChecked = e.target.checked;\r\n            allChecked = e.target.checked;\r\n        });\r\n    }\r\n    else{\r\n        list.find( item => item.name === e.target.name).isChecked = e.target.checked;\r\n    }\r\n    this.setState({list:list, allChecked: allChecked});\r\n}\r\n\r\nrenderList = () => {\r\n    return this.state.list.map(item =>\r\n        <div>\r\n            <input key={item.id} type=\"checkbox\" name={item.name} value={item.name} checked={item.isChecked} onChange={this.handleChange} />\r\n            <label>{item.name}</label>\r\n        </div>\r\n    )\r\n}\r\nrender(){\r\n    return(\r\n        <div  className=\"container\">\r\n            <input type=\"checkbox\" \r\n            value=\"checkAll\" \r\n            checked={this.state.allChecked} \r\n            onChange={this.handleChange} />Check all\r\n            <br/>\r\n            {this.renderList()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Box;\r\n\r\n// =========\r\n\r\n// selectAllChkBox = (e) => {\r\n//     let list = this.state.list\r\n//     // console.log(\"lst\",list);\r\n//     let allChecked = this.state.allChecked;\r\n//     if(e.target.value === \"checkAll\"){\r\n//     list.map(res => {\r\n//         res.done = true;\r\n//         item.isChecked = e.target.checked;\r\n//         allChecked = e.target.checked;\r\n//     })\r\n//     }\r\n//     else {\r\n//     this.setState({list: list})\r\n//     }\r\n//     // this.setState({list: list})\r\n//     console.log('selectAll list', list)\r\n//     // return list;\r\n//     this.setState({list:list, allChecked: allChecked});\r\n//   }\r\n\r\n\r\n{/* <input type=\"checkbox\" \r\nvalue=\"checkAll\" \r\nchecked={this.state.allChecked} \r\nonChange={this.handleChange} />Check all */}\r\n\r\n// handleChange = e => {\r\n//     let itemName = e.target.name;\r\n//     let checked = e.target.checked;\r\n//     this.setState(prevState => {\r\n//       let { list, allChecked } = prevState;\r\n//       if (itemName === \"checkAll\") {\r\n//         allChecked = checked;\r\n//         list = list.map(item => ({ ...item, isChecked: checked }));\r\n//       } else {\r\n//         list = list.map(item =>\r\n//           item.name === itemName ? { ...item, isChecked: checked } : item\r\n//         );\r\n//         allChecked = list.every(item => item.isChecked);\r\n//       }\r\n//       return { list, allChecked };\r\n//     });\r\n//   };","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n   {\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n         <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            props.deleteItem(item.key)\r\n        }} icon=\"trash\" />\r\n        </span>\r\n     </p>\r\n     \r\n    </div>})\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n        </FlipMove>\r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default ListItems;","import React from 'react';\r\nimport './Todo2.css';\r\nimport ListItems from './ListItems'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faTrash)\r\n\r\nclass Todo2 extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      items:[],\r\n      currentItem:{\r\n        text:'',\r\n        key:''\r\n      }\r\n    }\r\n    this.addItem = this.addItem.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.setUpdate = this.setUpdate.bind(this);\r\n  }\r\n  addItem(e){\r\n    e.preventDefault();\r\n    const newItem = this.state.currentItem;\r\n    if(newItem.text !==\"\"){\r\n      const items = [...this.state.items, newItem];\r\n    this.setState({\r\n      items: items,\r\n      currentItem:{\r\n        text:'',\r\n        key:''\r\n      }\r\n    })\r\n    }\r\n  }\r\n  handleInput(e){\r\n    this.setState({\r\n      currentItem:{\r\n        text: e.target.value,\r\n        key: Date.now()\r\n      }\r\n    })\r\n  }\r\n  deleteItem(key){\r\n    const filteredItems= this.state.items.filter(item =>\r\n      item.key!==key);\r\n    this.setState({\r\n      items: filteredItems\r\n    })\r\n\r\n  }\r\n  setUpdate(text,key){\r\n    console.log(\"items:\"+this.state.items);\r\n    const items = this.state.items;\r\n    items.map(item=>{      \r\n      if(item.key===key){\r\n        console.log(item.key +\"    \"+key)\r\n        item.text= text;\r\n      }\r\n    })\r\n    this.setState({\r\n      items: items\r\n    })\r\n    \r\n   \r\n  }\r\n render(){\r\n  return (\r\n    <div >\r\n      <header>\r\n        <form id=\"to-do-form\" className=\"container\" onSubmit={this.addItem}>\r\n          <input type=\"text\" placeholder=\"Enter task\" value= {this.state.currentItem.text} onChange={this.handleInput}></input>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n        <p>{this.state.items.text}</p>\r\n        \r\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\n\r\nexport default Todo2;","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport Todo from './component/Todo';\nimport Box from './component/Box';\nimport Todo2 from './component/todo2/Todo2';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Todo /> */}\n      {/* <Box /> */}\n      <Todo2 />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}